{"ast":null,"code":"/**\n * Split this component for RSC import\n */\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_MODE_STORAGE_KEY = 'mode';\nexport const DEFAULT_COLOR_SCHEME_STORAGE_KEY = 'color-scheme';\nexport const DEFAULT_ATTRIBUTE = 'data-color-scheme';\nexport default function InitColorSchemeScript(options) {\n  const {\n    defaultLightColorScheme = 'light',\n    defaultDarkColorScheme = 'dark',\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    attribute: initialAttribute = DEFAULT_ATTRIBUTE,\n    colorSchemeNode = 'document.documentElement',\n    nonce\n  } = options || {};\n  let setter = '';\n  let attribute = initialAttribute;\n  if (initialAttribute === 'class') {\n    attribute = '.%s';\n  }\n  if (initialAttribute === 'data') {\n    attribute = '[data-%s]';\n  }\n  if (attribute.startsWith('.')) {\n    const selector = attribute.substring(1);\n    setter += `${colorSchemeNode}.classList.remove('${selector}'.replace('%s', light), '${selector}'.replace('%s', dark));\n      ${colorSchemeNode}.classList.add('${selector}'.replace('%s', colorScheme));`;\n  }\n  const matches = attribute.match(/\\[([^\\]]+)\\]/); // case [data-color-scheme=%s] or [data-color-scheme]\n  if (matches) {\n    const [attr, value] = matches[1].split('=');\n    if (!value) {\n      setter += `${colorSchemeNode}.removeAttribute('${attr}'.replace('%s', light));\n      ${colorSchemeNode}.removeAttribute('${attr}'.replace('%s', dark));`;\n    }\n    setter += `\n      ${colorSchemeNode}.setAttribute('${attr}'.replace('%s', colorScheme), ${value ? `${value}.replace('%s', colorScheme)` : '\"\"'});`;\n  } else {\n    setter += `${colorSchemeNode}.setAttribute('${attribute}', colorScheme);`;\n  }\n  return /*#__PURE__*/_jsx(\"script\", {\n    suppressHydrationWarning: true,\n    nonce: typeof window === 'undefined' ? nonce : ''\n    // eslint-disable-next-line react/no-danger\n    ,\n\n    dangerouslySetInnerHTML: {\n      __html: `(function() {\ntry {\n  let colorScheme = '';\n  const mode = localStorage.getItem('${modeStorageKey}') || 'system';\n  const dark = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\n  const light = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\n  if (mode === 'system') {\n    // handle system mode\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if (mql.matches) {\n      colorScheme = dark\n    } else {\n      colorScheme = light\n    }\n  }\n  if (mode === 'light') {\n    colorScheme = light;\n  }\n  if (mode === 'dark') {\n    colorScheme = dark;\n  }\n  if (colorScheme) {\n    ${setter}\n  }\n} catch(e){}})();`\n    }\n  }, \"mui-color-scheme-init\");\n}","map":{"version":3,"names":["React","jsx","_jsx","DEFAULT_MODE_STORAGE_KEY","DEFAULT_COLOR_SCHEME_STORAGE_KEY","DEFAULT_ATTRIBUTE","InitColorSchemeScript","options","defaultLightColorScheme","defaultDarkColorScheme","modeStorageKey","colorSchemeStorageKey","attribute","initialAttribute","colorSchemeNode","nonce","setter","startsWith","selector","substring","matches","match","attr","value","split","suppressHydrationWarning","window","dangerouslySetInnerHTML","__html"],"sources":["D:/React js/techun/node_modules/@mui/system/InitColorSchemeScript/InitColorSchemeScript.js"],"sourcesContent":["/**\n * Split this component for RSC import\n */\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_MODE_STORAGE_KEY = 'mode';\nexport const DEFAULT_COLOR_SCHEME_STORAGE_KEY = 'color-scheme';\nexport const DEFAULT_ATTRIBUTE = 'data-color-scheme';\nexport default function InitColorSchemeScript(options) {\n  const {\n    defaultLightColorScheme = 'light',\n    defaultDarkColorScheme = 'dark',\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    attribute: initialAttribute = DEFAULT_ATTRIBUTE,\n    colorSchemeNode = 'document.documentElement',\n    nonce\n  } = options || {};\n  let setter = '';\n  let attribute = initialAttribute;\n  if (initialAttribute === 'class') {\n    attribute = '.%s';\n  }\n  if (initialAttribute === 'data') {\n    attribute = '[data-%s]';\n  }\n  if (attribute.startsWith('.')) {\n    const selector = attribute.substring(1);\n    setter += `${colorSchemeNode}.classList.remove('${selector}'.replace('%s', light), '${selector}'.replace('%s', dark));\n      ${colorSchemeNode}.classList.add('${selector}'.replace('%s', colorScheme));`;\n  }\n  const matches = attribute.match(/\\[([^\\]]+)\\]/); // case [data-color-scheme=%s] or [data-color-scheme]\n  if (matches) {\n    const [attr, value] = matches[1].split('=');\n    if (!value) {\n      setter += `${colorSchemeNode}.removeAttribute('${attr}'.replace('%s', light));\n      ${colorSchemeNode}.removeAttribute('${attr}'.replace('%s', dark));`;\n    }\n    setter += `\n      ${colorSchemeNode}.setAttribute('${attr}'.replace('%s', colorScheme), ${value ? `${value}.replace('%s', colorScheme)` : '\"\"'});`;\n  } else {\n    setter += `${colorSchemeNode}.setAttribute('${attribute}', colorScheme);`;\n  }\n  return /*#__PURE__*/_jsx(\"script\", {\n    suppressHydrationWarning: true,\n    nonce: typeof window === 'undefined' ? nonce : ''\n    // eslint-disable-next-line react/no-danger\n    ,\n    dangerouslySetInnerHTML: {\n      __html: `(function() {\ntry {\n  let colorScheme = '';\n  const mode = localStorage.getItem('${modeStorageKey}') || 'system';\n  const dark = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\n  const light = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\n  if (mode === 'system') {\n    // handle system mode\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if (mql.matches) {\n      colorScheme = dark\n    } else {\n      colorScheme = light\n    }\n  }\n  if (mode === 'light') {\n    colorScheme = light;\n  }\n  if (mode === 'dark') {\n    colorScheme = dark;\n  }\n  if (colorScheme) {\n    ${setter}\n  }\n} catch(e){}})();`\n    }\n  }, \"mui-color-scheme-init\");\n}"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,OAAO,MAAMC,wBAAwB,GAAG,MAAM;AAC9C,OAAO,MAAMC,gCAAgC,GAAG,cAAc;AAC9D,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB;AACpD,eAAe,SAASC,qBAAqB,CAACC,OAAO,EAAE;EACrD,MAAM;IACJC,uBAAuB,GAAG,OAAO;IACjCC,sBAAsB,GAAG,MAAM;IAC/BC,cAAc,GAAGP,wBAAwB;IACzCQ,qBAAqB,GAAGP,gCAAgC;IACxDQ,SAAS,EAAEC,gBAAgB,GAAGR,iBAAiB;IAC/CS,eAAe,GAAG,0BAA0B;IAC5CC;EACF,CAAC,GAAGR,OAAO,IAAI,CAAC,CAAC;EACjB,IAAIS,MAAM,GAAG,EAAE;EACf,IAAIJ,SAAS,GAAGC,gBAAgB;EAChC,IAAIA,gBAAgB,KAAK,OAAO,EAAE;IAChCD,SAAS,GAAG,KAAK;EACnB;EACA,IAAIC,gBAAgB,KAAK,MAAM,EAAE;IAC/BD,SAAS,GAAG,WAAW;EACzB;EACA,IAAIA,SAAS,CAACK,UAAU,CAAC,GAAG,CAAC,EAAE;IAC7B,MAAMC,QAAQ,GAAGN,SAAS,CAACO,SAAS,CAAC,CAAC,CAAC;IACvCH,MAAM,IAAK,GAAEF,eAAgB,sBAAqBI,QAAS,4BAA2BA,QAAS;AACnG,QAAQJ,eAAgB,mBAAkBI,QAAS,gCAA+B;EAChF;EACA,MAAME,OAAO,GAAGR,SAAS,CAACS,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC;EACjD,IAAID,OAAO,EAAE;IACX,MAAM,CAACE,IAAI,EAAEC,KAAK,CAAC,GAAGH,OAAO,CAAC,CAAC,CAAC,CAACI,KAAK,CAAC,GAAG,CAAC;IAC3C,IAAI,CAACD,KAAK,EAAE;MACVP,MAAM,IAAK,GAAEF,eAAgB,qBAAoBQ,IAAK;AAC5D,QAAQR,eAAgB,qBAAoBQ,IAAK,yBAAwB;IACrE;IACAN,MAAM,IAAK;AACf,QAAQF,eAAgB,kBAAiBQ,IAAK,iCAAgCC,KAAK,GAAI,GAAEA,KAAM,6BAA4B,GAAG,IAAK,IAAG;EACpI,CAAC,MAAM;IACLP,MAAM,IAAK,GAAEF,eAAgB,kBAAiBF,SAAU,kBAAiB;EAC3E;EACA,OAAO,aAAaV,IAAI,CAAC,QAAQ,EAAE;IACjCuB,wBAAwB,EAAE,IAAI;IAC9BV,KAAK,EAAE,OAAOW,MAAM,KAAK,WAAW,GAAGX,KAAK,GAAG;IAC/C;IAAA;;IAEAY,uBAAuB,EAAE;MACvBC,MAAM,EAAG;AACf;AACA;AACA,uCAAuClB,cAAe;AACtD,uCAAuCC,qBAAsB,eAAcF,sBAAuB;AAClG,wCAAwCE,qBAAsB,gBAAeH,uBAAwB;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMQ,MAAO;AACb;AACA;IACI;EACF,CAAC,EAAE,uBAAuB,CAAC;AAC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}