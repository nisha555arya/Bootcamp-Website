{"ast":null,"code":"var _jsxFileName = \"D:\\\\React js\\\\techun\\\\src\\\\Component\\\\Practice.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst countries = [{\n  name: \"India\",\n  value: \"In\",\n  cities: [\"Delhi\", \"Mumbai\"]\n}, {\n  name: \"pak\",\n  value: \"pk\",\n  cities: [\"lahore\", \"karachi\"]\n}];\nexport const Practice = () => {\n  _s();\n  // state  store the  value of the country-------\n  const [country, setCountry] = useState({\n    name: \"\"\n  });\n\n  // const handlechangeselect =()=>{\n\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: country,\n        onChange: e => setCountry(e.target.value),\n        children: countries.map((curr, index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: curr.value,\n            children: [\" \", curr.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: country,\n      children: countries[country].cities.map((curr, index) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: index,\n          children: [\" \", curr]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n// import { useState } from \"react\";\n\n// const arr = [\"cricket\", \"football\", \"play\"];\n// export const Practice = () => {\n//   const [item, setItem] = useState(arr);\n//   const [ check , setCheck] = useState(new Array(arr.length).fill(false));\n\n//   const handlebtn = (itemIndex) => {\n//     let newarr = item;\n//     let filterArr = newarr.filter((curr, index) => {\n//       return index !== itemIndex;\n//     });\n//     setItem(filterArr);\n\n//     //\n//     const updatedCheckbox =  check.filter((curr , index) => index!==item)\n//     setCheck(updatedCheckbox);\n//     console.log(updatedCheckbox);\n//   };\n\n//   const handlecheckBox =(index)=>{\n//     console.log(\"checked the button\");\n//     const updatedCheckbox = [...check]\n//     updatedCheckbox[index] = !updatedCheckbox[index];\n//     setCheck(updatedCheckbox);\n\n//   }\n//   return (\n//     <div className=\"app\">\n//       <ul>\n//         {item.map((currelm, index) => {\n//           return (\n//             <li key={index}>\n//               <input   type=\"checkbox\"   checked={check[index]} onChange={ () => handlecheckBox (index)}/>\n//   {currelm}\n_s(Practice, \"4Gc0CChLw9ApphqyMMr3pXki7nc=\");\n_c = Practice;\n{\n  /* <button onClick={() => handlebtn(index)}> dtl item</button> */\n}\n{\n  /* {check[index] && (\r\n              <button onClick={() => handlebtn(index)}>Delete item</button>\r\n            )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div> */\n}\n//   );\n// };\nvar _c;\n$RefreshReg$(_c, \"Practice\");","map":{"version":3,"names":["useState","countries","name","value","cities","Practice","country","setCountry","e","target","map","curr","index"],"sources":["D:/React js/techun/src/Component/Practice.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst countries = [\r\n  { name: \"India\", value: \"In\", cities: [\"Delhi\", \"Mumbai\"] },\r\n  { name: \"pak\", value: \"pk\", cities: [\"lahore\", \"karachi\"] },\r\n];\r\nexport const Practice = () => {\r\n  // state  store the  value of the country-------\r\n  const [country, setCountry] = useState({name:\"\"})\r\n\r\n  // const handlechangeselect =()=>{\r\n\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"App\">\r\n        <select value={country} onChange={(e) => setCountry(e.target.value)}>\r\n          {countries.map((curr, index) => {\r\n            return <option value={curr.value}> {curr.name}</option>;\r\n          })}\r\n        </select>\r\n      </div>\r\n      {/* //2nd dropdown */}\r\n      \r\n      <select \r\n       value={country}>\r\n         {countries[country].cities.map((curr , index)=>{\r\n            return<option value={index}> {curr}</option>\r\n         })}\r\n       </select>\r\n    </>\r\n  );\r\n};\r\n\r\n// import { useState } from \"react\";\r\n\r\n// const arr = [\"cricket\", \"football\", \"play\"];\r\n// export const Practice = () => {\r\n//   const [item, setItem] = useState(arr);\r\n//   const [ check , setCheck] = useState(new Array(arr.length).fill(false));\r\n\r\n//   const handlebtn = (itemIndex) => {\r\n//     let newarr = item;\r\n//     let filterArr = newarr.filter((curr, index) => {\r\n//       return index !== itemIndex;\r\n//     });\r\n//     setItem(filterArr);\r\n\r\n//     //\r\n//     const updatedCheckbox =  check.filter((curr , index) => index!==item)\r\n//     setCheck(updatedCheckbox);\r\n//     console.log(updatedCheckbox);\r\n//   };\r\n\r\n//   const handlecheckBox =(index)=>{\r\n//     console.log(\"checked the button\");\r\n//     const updatedCheckbox = [...check]\r\n//     updatedCheckbox[index] = !updatedCheckbox[index];\r\n//     setCheck(updatedCheckbox);\r\n\r\n//   }\r\n//   return (\r\n//     <div className=\"app\">\r\n//       <ul>\r\n//         {item.map((currelm, index) => {\r\n//           return (\r\n//             <li key={index}>\r\n//               <input   type=\"checkbox\"   checked={check[index]} onChange={ () => handlecheckBox (index)}/>\r\n//   {currelm}\r\n{\r\n  /* <button onClick={() => handlebtn(index)}> dtl item</button> */\r\n}\r\n{\r\n  /* {check[index] && (\r\n              <button onClick={() => handlebtn(index)}>Delete item</button>\r\n            )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div> */\r\n}\r\n//   );\r\n// };\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAEjC,MAAMC,SAAS,GAAG,CAChB;EAAEC,IAAI,EAAE,OAAO;EAAEC,KAAK,EAAE,IAAI;EAAEC,MAAM,EAAE,CAAC,OAAO,EAAE,QAAQ;AAAE,CAAC,EAC3D;EAAEF,IAAI,EAAE,KAAK;EAAEC,KAAK,EAAE,IAAI;EAAEC,MAAM,EAAE,CAAC,QAAQ,EAAE,SAAS;AAAE,CAAC,CAC5D;AACD,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAAA;EAC5B;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC;IAACE,IAAI,EAAC;EAAE,CAAC,CAAC;;EAEjD;;EAEA;;EAEA,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,KAAK;MAAA,uBAClB;QAAQ,KAAK,EAAEI,OAAQ;QAAC,QAAQ,EAAGE,CAAC,IAAKD,UAAU,CAACC,CAAC,CAACC,MAAM,CAACN,KAAK,CAAE;QAAA,UACjEF,SAAS,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;UAC9B,oBAAO;YAAQ,KAAK,EAAED,IAAI,CAACR,KAAM;YAAA,WAAC,GAAC,EAACQ,IAAI,CAACT,IAAI;UAAA;YAAA;YAAA;YAAA;UAAA,QAAU;QACzD,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA;IACK;MAAA;MAAA;MAAA;IAAA,QACL,eAGN;MACC,KAAK,EAAEI,OAAQ;MAAA,UACZL,SAAS,CAACK,OAAO,CAAC,CAACF,MAAM,CAACM,GAAG,CAAC,CAACC,IAAI,EAAGC,KAAK,KAAG;QAC5C,oBAAM;UAAQ,KAAK,EAAEA,KAAM;UAAA,WAAC,GAAC,EAACD,IAAI;QAAA;UAAA;UAAA;UAAA;QAAA,QAAU;MAC/C,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACK;EAAA,gBACT;AAEP,CAAC;;AAED;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,GA/DaN,QAAQ;AAAA,KAARA,QAAQ;AAgErB;EACE;AAAA;AAEF;EACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AAPE;AASF;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}