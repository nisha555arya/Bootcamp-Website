{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Typography from \"../Typography/index.js\";\nimport { getDialogContentTextUtilityClass } from \"./dialogContentTextClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return {\n    ...classes,\n    // forward classes to the Typography\n    ...composedClasses\n  };\n};\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n  const {\n    children,\n    className,\n    ...ownerState\n  } = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, {\n    component: \"p\",\n    variant: \"body1\",\n    color: \"textSecondary\",\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ...props,\n    classes: classes\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;","map":{"version":3,"names":["React","PropTypes","clsx","composeClasses","rootShouldForwardProp","styled","useDefaultProps","Typography","getDialogContentTextUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","classes","slots","root","composedClasses","DialogContentTextRoot","shouldForwardProp","prop","name","slot","overridesResolver","props","styles","DialogContentText","forwardRef","inProps","ref","children","className","component","variant","color","process","env","NODE_ENV","propTypes","node","object","string","sx","oneOfType","arrayOf","func","bool"],"sources":["D:/React js/techun/node_modules/@mui/material/DialogContentText/DialogContentText.js"],"sourcesContent":["'use client';\r\n\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport composeClasses from '@mui/utils/composeClasses';\r\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\r\nimport { styled } from \"../zero-styled/index.js\";\r\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\r\nimport Typography from \"../Typography/index.js\";\r\nimport { getDialogContentTextUtilityClass } from \"./dialogContentTextClasses.js\";\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root']\r\n  };\r\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\r\n  return {\r\n    ...classes,\r\n    // forward classes to the Typography\r\n    ...composedClasses\r\n  };\r\n};\r\nconst DialogContentTextRoot = styled(Typography, {\r\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\r\n  name: 'MuiDialogContentText',\r\n  slot: 'Root',\r\n  overridesResolver: (props, styles) => styles.root\r\n})({});\r\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\r\n  const props = useDefaultProps({\r\n    props: inProps,\r\n    name: 'MuiDialogContentText'\r\n  });\r\n  const {\r\n    children,\r\n    className,\r\n    ...ownerState\r\n  } = props;\r\n  const classes = useUtilityClasses(ownerState);\r\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, {\r\n    component: \"p\",\r\n    variant: \"body1\",\r\n    color: \"textSecondary\",\r\n    ref: ref,\r\n    ownerState: ownerState,\r\n    className: clsx(classes.root, className),\r\n    ...props,\r\n    classes: classes\r\n  });\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes /* remove-proptypes */ = {\r\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\r\n  // │ These PropTypes are generated from the TypeScript type definitions. │\r\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\r\n  // └─────────────────────────────────────────────────────────────────────┘\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\r\n} : void 0;\r\nexport default DialogContentText;"],"mappings":"AAAA,YAAY;;AAEZ,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,qBAAqB,MAAM,oCAAoC;AACtE,SAASC,MAAM,QAAQ,yBAAyB;AAChD,SAASC,eAAe,QAAQ,kCAAkC;AAClE,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,SAASC,gCAAgC,QAAQ,+BAA+B;AAChF,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAMC,iBAAiB,GAAGC,UAAU,IAAI;EACtC,MAAM;IACJC;EACF,CAAC,GAAGD,UAAU;EACd,MAAME,KAAK,GAAG;IACZC,IAAI,EAAE,CAAC,MAAM;EACf,CAAC;EACD,MAAMC,eAAe,GAAGb,cAAc,CAACW,KAAK,EAAEN,gCAAgC,EAAEK,OAAO,CAAC;EACxF,OAAO;IACL,GAAGA,OAAO;IACV;IACA,GAAGG;EACL,CAAC;AACH,CAAC;AACD,MAAMC,qBAAqB,GAAGZ,MAAM,CAACE,UAAU,EAAE;EAC/CW,iBAAiB,EAAEC,IAAI,IAAIf,qBAAqB,CAACe,IAAI,CAAC,IAAIA,IAAI,KAAK,SAAS;EAC5EC,IAAI,EAAE,sBAAsB;EAC5BC,IAAI,EAAE,MAAM;EACZC,iBAAiB,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAKA,MAAM,CAACT;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,MAAMU,iBAAiB,GAAG,aAAazB,KAAK,CAAC0B,UAAU,CAAC,SAASD,iBAAiB,CAACE,OAAO,EAAEC,GAAG,EAAE;EAC/F,MAAML,KAAK,GAAGjB,eAAe,CAAC;IAC5BiB,KAAK,EAAEI,OAAO;IACdP,IAAI,EAAE;EACR,CAAC,CAAC;EACF,MAAM;IACJS,QAAQ;IACRC,SAAS;IACT,GAAGlB;EACL,CAAC,GAAGW,KAAK;EACT,MAAMV,OAAO,GAAGF,iBAAiB,CAACC,UAAU,CAAC;EAC7C,OAAO,aAAaF,IAAI,CAACO,qBAAqB,EAAE;IAC9Cc,SAAS,EAAE,GAAG;IACdC,OAAO,EAAE,OAAO;IAChBC,KAAK,EAAE,eAAe;IACtBL,GAAG,EAAEA,GAAG;IACRhB,UAAU,EAAEA,UAAU;IACtBkB,SAAS,EAAE5B,IAAI,CAACW,OAAO,CAACE,IAAI,EAAEe,SAAS,CAAC;IACxC,GAAGP,KAAK;IACRV,OAAO,EAAEA;EACX,CAAC,CAAC;AACJ,CAAC,CAAC;AACFqB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGX,iBAAiB,CAACY,SAAS,CAAC,yBAAyB;EAC3F;EACA;EACA;EACA;EACA;AACF;AACA;EACER,QAAQ,EAAE5B,SAAS,CAACqC,IAAI;EACxB;AACF;AACA;EACEzB,OAAO,EAAEZ,SAAS,CAACsC,MAAM;EACzB;AACF;AACA;EACET,SAAS,EAAE7B,SAAS,CAACuC,MAAM;EAC3B;AACF;AACA;EACEC,EAAE,EAAExC,SAAS,CAACyC,SAAS,CAAC,CAACzC,SAAS,CAAC0C,OAAO,CAAC1C,SAAS,CAACyC,SAAS,CAAC,CAACzC,SAAS,CAAC2C,IAAI,EAAE3C,SAAS,CAACsC,MAAM,EAAEtC,SAAS,CAAC4C,IAAI,CAAC,CAAC,CAAC,EAAE5C,SAAS,CAAC2C,IAAI,EAAE3C,SAAS,CAACsC,MAAM,CAAC;AACxJ,CAAC,GAAG,KAAK,CAAC;AACV,eAAed,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}