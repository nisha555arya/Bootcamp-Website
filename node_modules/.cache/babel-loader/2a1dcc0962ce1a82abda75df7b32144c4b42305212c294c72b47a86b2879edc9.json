{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport styleFunctionSx from '@mui/system/styleFunctionSx';\nimport { unstable_createCssVarsProvider as createCssVarsProvider } from '@mui/system';\nimport createTheme from \"./createTheme.js\";\nimport createTypography from \"./createTypography.js\";\nimport THEME_ID from \"./identifier.js\";\nimport { defaultConfig } from \"../InitColorSchemeScript/InitColorSchemeScript.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst {\n  CssVarsProvider: InternalCssVarsProvider,\n  useColorScheme,\n  getInitColorSchemeScript: deprecatedGetInitColorSchemeScript\n} = createCssVarsProvider({\n  themeId: THEME_ID,\n  // @ts-ignore ignore module augmentation tests\n  theme: () => createTheme({\n    cssVariables: true\n  }),\n  colorSchemeStorageKey: defaultConfig.colorSchemeStorageKey,\n  modeStorageKey: defaultConfig.modeStorageKey,\n  defaultColorScheme: {\n    light: defaultConfig.defaultLightColorScheme,\n    dark: defaultConfig.defaultDarkColorScheme\n  },\n  resolveTheme: theme => {\n    const newTheme = {\n      ...theme,\n      typography: createTypography(theme.palette, theme.typography)\n    };\n    newTheme.unstable_sx = function sx(props) {\n      return styleFunctionSx({\n        sx: props,\n        theme: this\n      });\n    };\n    return newTheme;\n  }\n});\nlet warnedOnce = false;\n\n// TODO: remove in v7\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction Experimental_CssVarsProvider(props) {\n  if (!warnedOnce) {\n    console.warn(['MUI: The Experimental_CssVarsProvider component has been ported into ThemeProvider.', '', \"You should use `import { ThemeProvider } from '@mui/material/styles'` instead.\", 'For more details, check out https://mui.com/material-ui/customization/css-theme-variables/usage/'].join('\\n'));\n    warnedOnce = true;\n  }\n  return /*#__PURE__*/_jsx(InternalCssVarsProvider, {\n    ...props\n  });\n}\nlet warnedInitScriptOnce = false;\n\n// TODO: remove in v7\nconst getInitColorSchemeScript = params => {\n  if (!warnedInitScriptOnce) {\n    console.warn(['MUI: The getInitColorSchemeScript function has been deprecated.', '', \"You should use `import InitColorSchemeScript from '@mui/material/InitColorSchemeScript'`\", 'and replace the function call with `<InitColorSchemeScript />` instead.'].join('\\n'));\n    warnedInitScriptOnce = true;\n  }\n  return deprecatedGetInitColorSchemeScript(params);\n};\n\n/**\r\n * TODO: remove this export in v7\r\n * @deprecated\r\n * The `CssVarsProvider` component has been deprecated and ported into `ThemeProvider`.\r\n *\r\n * You should use `ThemeProvider` and `createTheme` instead:\r\n *\r\n * ```diff\r\n * - import { CssVarsProvider, extendTheme } from '@mui/material/styles';\r\n * + import { ThemeProvider, createTheme } from '@mui/material/styles';\r\n *\r\n * - const theme = extendTheme();\r\n * + const theme = createTheme({\r\n * +   cssVariables: true,\r\n * +   colorSchemes: { light: true, dark: true },\r\n * + });\r\n *\r\n * - <CssVarsProvider theme={theme}>\r\n * + <ThemeProvider theme={theme}>\r\n * ```\r\n *\r\n * To see the full documentation, check out https://mui.com/material-ui/customization/css-theme-variables/usage/.\r\n */\nexport const CssVarsProvider = InternalCssVarsProvider;\nexport { useColorScheme, getInitColorSchemeScript, Experimental_CssVarsProvider };","map":{"version":3,"names":["React","styleFunctionSx","unstable_createCssVarsProvider","createCssVarsProvider","createTheme","createTypography","THEME_ID","defaultConfig","jsx","_jsx","CssVarsProvider","InternalCssVarsProvider","useColorScheme","getInitColorSchemeScript","deprecatedGetInitColorSchemeScript","themeId","theme","cssVariables","colorSchemeStorageKey","modeStorageKey","defaultColorScheme","light","defaultLightColorScheme","dark","defaultDarkColorScheme","resolveTheme","newTheme","typography","palette","unstable_sx","sx","props","warnedOnce","Experimental_CssVarsProvider","console","warn","join","warnedInitScriptOnce","params"],"sources":["D:/React js/techun/node_modules/@mui/material/styles/ThemeProviderWithVars.js"],"sourcesContent":["'use client';\r\n\r\nimport * as React from 'react';\r\nimport styleFunctionSx from '@mui/system/styleFunctionSx';\r\nimport { unstable_createCssVarsProvider as createCssVarsProvider } from '@mui/system';\r\nimport createTheme from \"./createTheme.js\";\r\nimport createTypography from \"./createTypography.js\";\r\nimport THEME_ID from \"./identifier.js\";\r\nimport { defaultConfig } from \"../InitColorSchemeScript/InitColorSchemeScript.js\";\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst {\r\n  CssVarsProvider: InternalCssVarsProvider,\r\n  useColorScheme,\r\n  getInitColorSchemeScript: deprecatedGetInitColorSchemeScript\r\n} = createCssVarsProvider({\r\n  themeId: THEME_ID,\r\n  // @ts-ignore ignore module augmentation tests\r\n  theme: () => createTheme({\r\n    cssVariables: true\r\n  }),\r\n  colorSchemeStorageKey: defaultConfig.colorSchemeStorageKey,\r\n  modeStorageKey: defaultConfig.modeStorageKey,\r\n  defaultColorScheme: {\r\n    light: defaultConfig.defaultLightColorScheme,\r\n    dark: defaultConfig.defaultDarkColorScheme\r\n  },\r\n  resolveTheme: theme => {\r\n    const newTheme = {\r\n      ...theme,\r\n      typography: createTypography(theme.palette, theme.typography)\r\n    };\r\n    newTheme.unstable_sx = function sx(props) {\r\n      return styleFunctionSx({\r\n        sx: props,\r\n        theme: this\r\n      });\r\n    };\r\n    return newTheme;\r\n  }\r\n});\r\nlet warnedOnce = false;\r\n\r\n// TODO: remove in v7\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nfunction Experimental_CssVarsProvider(props) {\r\n  if (!warnedOnce) {\r\n    console.warn(['MUI: The Experimental_CssVarsProvider component has been ported into ThemeProvider.', '', \"You should use `import { ThemeProvider } from '@mui/material/styles'` instead.\", 'For more details, check out https://mui.com/material-ui/customization/css-theme-variables/usage/'].join('\\n'));\r\n    warnedOnce = true;\r\n  }\r\n  return /*#__PURE__*/_jsx(InternalCssVarsProvider, {\r\n    ...props\r\n  });\r\n}\r\nlet warnedInitScriptOnce = false;\r\n\r\n// TODO: remove in v7\r\nconst getInitColorSchemeScript = params => {\r\n  if (!warnedInitScriptOnce) {\r\n    console.warn(['MUI: The getInitColorSchemeScript function has been deprecated.', '', \"You should use `import InitColorSchemeScript from '@mui/material/InitColorSchemeScript'`\", 'and replace the function call with `<InitColorSchemeScript />` instead.'].join('\\n'));\r\n    warnedInitScriptOnce = true;\r\n  }\r\n  return deprecatedGetInitColorSchemeScript(params);\r\n};\r\n\r\n/**\r\n * TODO: remove this export in v7\r\n * @deprecated\r\n * The `CssVarsProvider` component has been deprecated and ported into `ThemeProvider`.\r\n *\r\n * You should use `ThemeProvider` and `createTheme` instead:\r\n *\r\n * ```diff\r\n * - import { CssVarsProvider, extendTheme } from '@mui/material/styles';\r\n * + import { ThemeProvider, createTheme } from '@mui/material/styles';\r\n *\r\n * - const theme = extendTheme();\r\n * + const theme = createTheme({\r\n * +   cssVariables: true,\r\n * +   colorSchemes: { light: true, dark: true },\r\n * + });\r\n *\r\n * - <CssVarsProvider theme={theme}>\r\n * + <ThemeProvider theme={theme}>\r\n * ```\r\n *\r\n * To see the full documentation, check out https://mui.com/material-ui/customization/css-theme-variables/usage/.\r\n */\r\nexport const CssVarsProvider = InternalCssVarsProvider;\r\nexport { useColorScheme, getInitColorSchemeScript, Experimental_CssVarsProvider };"],"mappings":"AAAA,YAAY;;AAEZ,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,eAAe,MAAM,6BAA6B;AACzD,SAASC,8BAA8B,IAAIC,qBAAqB,QAAQ,aAAa;AACrF,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,gBAAgB,MAAM,uBAAuB;AACpD,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,SAASC,aAAa,QAAQ,mDAAmD;AACjF,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAM;EACJC,eAAe,EAAEC,uBAAuB;EACxCC,cAAc;EACdC,wBAAwB,EAAEC;AAC5B,CAAC,GAAGX,qBAAqB,CAAC;EACxBY,OAAO,EAAET,QAAQ;EACjB;EACAU,KAAK,EAAE,MAAMZ,WAAW,CAAC;IACvBa,YAAY,EAAE;EAChB,CAAC,CAAC;EACFC,qBAAqB,EAAEX,aAAa,CAACW,qBAAqB;EAC1DC,cAAc,EAAEZ,aAAa,CAACY,cAAc;EAC5CC,kBAAkB,EAAE;IAClBC,KAAK,EAAEd,aAAa,CAACe,uBAAuB;IAC5CC,IAAI,EAAEhB,aAAa,CAACiB;EACtB,CAAC;EACDC,YAAY,EAAET,KAAK,IAAI;IACrB,MAAMU,QAAQ,GAAG;MACf,GAAGV,KAAK;MACRW,UAAU,EAAEtB,gBAAgB,CAACW,KAAK,CAACY,OAAO,EAAEZ,KAAK,CAACW,UAAU;IAC9D,CAAC;IACDD,QAAQ,CAACG,WAAW,GAAG,SAASC,EAAE,CAACC,KAAK,EAAE;MACxC,OAAO9B,eAAe,CAAC;QACrB6B,EAAE,EAAEC,KAAK;QACTf,KAAK,EAAE;MACT,CAAC,CAAC;IACJ,CAAC;IACD,OAAOU,QAAQ;EACjB;AACF,CAAC,CAAC;AACF,IAAIM,UAAU,GAAG,KAAK;;AAEtB;AACA;AACA,SAASC,4BAA4B,CAACF,KAAK,EAAE;EAC3C,IAAI,CAACC,UAAU,EAAE;IACfE,OAAO,CAACC,IAAI,CAAC,CAAC,qFAAqF,EAAE,EAAE,EAAE,gFAAgF,EAAE,kGAAkG,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1SJ,UAAU,GAAG,IAAI;EACnB;EACA,OAAO,aAAavB,IAAI,CAACE,uBAAuB,EAAE;IAChD,GAAGoB;EACL,CAAC,CAAC;AACJ;AACA,IAAIM,oBAAoB,GAAG,KAAK;;AAEhC;AACA,MAAMxB,wBAAwB,GAAGyB,MAAM,IAAI;EACzC,IAAI,CAACD,oBAAoB,EAAE;IACzBH,OAAO,CAACC,IAAI,CAAC,CAAC,iEAAiE,EAAE,EAAE,EAAE,0FAA0F,EAAE,yEAAyE,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvQC,oBAAoB,GAAG,IAAI;EAC7B;EACA,OAAOvB,kCAAkC,CAACwB,MAAM,CAAC;AACnD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAM5B,eAAe,GAAGC,uBAAuB;AACtD,SAASC,cAAc,EAAEC,wBAAwB,EAAEoB,4BAA4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}