{"ast":null,"code":"import capitalize from '@mui/utils/capitalize';\nimport merge from \"../merge/index.js\";\nimport { getPath, getStyleValue as getValue } from \"../style/index.js\";\nimport { handleBreakpoints, createEmptyBreakpointObject, removeUnusedBreakpoints } from \"../breakpoints/index.js\";\nimport { sortContainerQueries } from \"../cssContainerQueries/index.js\";\nimport defaultSxConfig from \"./defaultSxConfig.js\";\nfunction objectsHaveSameKeys() {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n  const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);\n  const union = new Set(allKeys);\n  return objects.every(object => union.size === Object.keys(object).length);\n}\nfunction callIfFn(maybeFn, arg) {\n  return typeof maybeFn === 'function' ? maybeFn(arg) : maybeFn;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function unstable_createStyleFunctionSx() {\n  function getThemeValue(prop, val, theme, config) {\n    const props = {\n      [prop]: val,\n      theme\n    };\n    const options = config[prop];\n    if (!options) {\n      return {\n        [prop]: val\n      };\n    }\n    const {\n      cssProperty = prop,\n      themeKey,\n      transform,\n      style\n    } = options;\n    if (val == null) {\n      return null;\n    }\n\n    // TODO v6: remove, see https://github.com/mui/material-ui/pull/38123\n    if (themeKey === 'typography' && val === 'inherit') {\n      return {\n        [prop]: val\n      };\n    }\n    const themeMapping = getPath(theme, themeKey) || {};\n    if (style) {\n      return style(props);\n    }\n    const styleFromPropValue = propValueFinal => {\n      let value = getValue(themeMapping, transform, propValueFinal);\n      if (propValueFinal === value && typeof propValueFinal === 'string') {\n        // Haven't found value\n        value = getValue(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : capitalize(propValueFinal)}`, propValueFinal);\n      }\n      if (cssProperty === false) {\n        return value;\n      }\n      return {\n        [cssProperty]: value\n      };\n    };\n    return handleBreakpoints(props, val, styleFromPropValue);\n  }\n  function styleFunctionSx(props) {\n    const {\n      sx,\n      theme = {}\n    } = props || {};\n    if (!sx) {\n      return null; // Emotion & styled-components will neglect null\n    }\n\n    const config = theme.unstable_sxConfig ?? defaultSxConfig;\n\n    /*\r\n     * Receive `sxInput` as object or callback\r\n     * and then recursively check keys & values to create media query object styles.\r\n     * (the result will be used in `styled`)\r\n     */\n    function traverse(sxInput) {\n      let sxObject = sxInput;\n      if (typeof sxInput === 'function') {\n        sxObject = sxInput(theme);\n      } else if (typeof sxInput !== 'object') {\n        // value\n        return sxInput;\n      }\n      if (!sxObject) {\n        return null;\n      }\n      const emptyBreakpoints = createEmptyBreakpointObject(theme.breakpoints);\n      const breakpointsKeys = Object.keys(emptyBreakpoints);\n      let css = emptyBreakpoints;\n      Object.keys(sxObject).forEach(styleKey => {\n        const value = callIfFn(sxObject[styleKey], theme);\n        if (value !== null && value !== undefined) {\n          if (typeof value === 'object') {\n            if (config[styleKey]) {\n              css = merge(css, getThemeValue(styleKey, value, theme, config));\n            } else {\n              const breakpointsValues = handleBreakpoints({\n                theme\n              }, value, x => ({\n                [styleKey]: x\n              }));\n              if (objectsHaveSameKeys(breakpointsValues, value)) {\n                css[styleKey] = styleFunctionSx({\n                  sx: value,\n                  theme\n                });\n              } else {\n                css = merge(css, breakpointsValues);\n              }\n            }\n          } else {\n            css = merge(css, getThemeValue(styleKey, value, theme, config));\n          }\n        }\n      });\n      return sortContainerQueries(theme, removeUnusedBreakpoints(breakpointsKeys, css));\n    }\n    return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);\n  }\n  return styleFunctionSx;\n}\nconst styleFunctionSx = unstable_createStyleFunctionSx();\nstyleFunctionSx.filterProps = ['sx'];\nexport default styleFunctionSx;","map":{"version":3,"names":["capitalize","merge","getPath","getStyleValue","getValue","handleBreakpoints","createEmptyBreakpointObject","removeUnusedBreakpoints","sortContainerQueries","defaultSxConfig","objectsHaveSameKeys","objects","allKeys","reduce","keys","object","concat","Object","union","Set","every","size","length","callIfFn","maybeFn","arg","unstable_createStyleFunctionSx","getThemeValue","prop","val","theme","config","props","options","cssProperty","themeKey","transform","style","themeMapping","styleFromPropValue","propValueFinal","value","styleFunctionSx","sx","unstable_sxConfig","traverse","sxInput","sxObject","emptyBreakpoints","breakpoints","breakpointsKeys","css","forEach","styleKey","undefined","breakpointsValues","x","Array","isArray","map","filterProps"],"sources":["D:/React js/techun/node_modules/@mui/system/styleFunctionSx/styleFunctionSx.js"],"sourcesContent":["import capitalize from '@mui/utils/capitalize';\r\nimport merge from \"../merge/index.js\";\r\nimport { getPath, getStyleValue as getValue } from \"../style/index.js\";\r\nimport { handleBreakpoints, createEmptyBreakpointObject, removeUnusedBreakpoints } from \"../breakpoints/index.js\";\r\nimport { sortContainerQueries } from \"../cssContainerQueries/index.js\";\r\nimport defaultSxConfig from \"./defaultSxConfig.js\";\r\nfunction objectsHaveSameKeys(...objects) {\r\n  const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);\r\n  const union = new Set(allKeys);\r\n  return objects.every(object => union.size === Object.keys(object).length);\r\n}\r\nfunction callIfFn(maybeFn, arg) {\r\n  return typeof maybeFn === 'function' ? maybeFn(arg) : maybeFn;\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nexport function unstable_createStyleFunctionSx() {\r\n  function getThemeValue(prop, val, theme, config) {\r\n    const props = {\r\n      [prop]: val,\r\n      theme\r\n    };\r\n    const options = config[prop];\r\n    if (!options) {\r\n      return {\r\n        [prop]: val\r\n      };\r\n    }\r\n    const {\r\n      cssProperty = prop,\r\n      themeKey,\r\n      transform,\r\n      style\r\n    } = options;\r\n    if (val == null) {\r\n      return null;\r\n    }\r\n\r\n    // TODO v6: remove, see https://github.com/mui/material-ui/pull/38123\r\n    if (themeKey === 'typography' && val === 'inherit') {\r\n      return {\r\n        [prop]: val\r\n      };\r\n    }\r\n    const themeMapping = getPath(theme, themeKey) || {};\r\n    if (style) {\r\n      return style(props);\r\n    }\r\n    const styleFromPropValue = propValueFinal => {\r\n      let value = getValue(themeMapping, transform, propValueFinal);\r\n      if (propValueFinal === value && typeof propValueFinal === 'string') {\r\n        // Haven't found value\r\n        value = getValue(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : capitalize(propValueFinal)}`, propValueFinal);\r\n      }\r\n      if (cssProperty === false) {\r\n        return value;\r\n      }\r\n      return {\r\n        [cssProperty]: value\r\n      };\r\n    };\r\n    return handleBreakpoints(props, val, styleFromPropValue);\r\n  }\r\n  function styleFunctionSx(props) {\r\n    const {\r\n      sx,\r\n      theme = {}\r\n    } = props || {};\r\n    if (!sx) {\r\n      return null; // Emotion & styled-components will neglect null\r\n    }\r\n    const config = theme.unstable_sxConfig ?? defaultSxConfig;\r\n\r\n    /*\r\n     * Receive `sxInput` as object or callback\r\n     * and then recursively check keys & values to create media query object styles.\r\n     * (the result will be used in `styled`)\r\n     */\r\n    function traverse(sxInput) {\r\n      let sxObject = sxInput;\r\n      if (typeof sxInput === 'function') {\r\n        sxObject = sxInput(theme);\r\n      } else if (typeof sxInput !== 'object') {\r\n        // value\r\n        return sxInput;\r\n      }\r\n      if (!sxObject) {\r\n        return null;\r\n      }\r\n      const emptyBreakpoints = createEmptyBreakpointObject(theme.breakpoints);\r\n      const breakpointsKeys = Object.keys(emptyBreakpoints);\r\n      let css = emptyBreakpoints;\r\n      Object.keys(sxObject).forEach(styleKey => {\r\n        const value = callIfFn(sxObject[styleKey], theme);\r\n        if (value !== null && value !== undefined) {\r\n          if (typeof value === 'object') {\r\n            if (config[styleKey]) {\r\n              css = merge(css, getThemeValue(styleKey, value, theme, config));\r\n            } else {\r\n              const breakpointsValues = handleBreakpoints({\r\n                theme\r\n              }, value, x => ({\r\n                [styleKey]: x\r\n              }));\r\n              if (objectsHaveSameKeys(breakpointsValues, value)) {\r\n                css[styleKey] = styleFunctionSx({\r\n                  sx: value,\r\n                  theme\r\n                });\r\n              } else {\r\n                css = merge(css, breakpointsValues);\r\n              }\r\n            }\r\n          } else {\r\n            css = merge(css, getThemeValue(styleKey, value, theme, config));\r\n          }\r\n        }\r\n      });\r\n      return sortContainerQueries(theme, removeUnusedBreakpoints(breakpointsKeys, css));\r\n    }\r\n    return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);\r\n  }\r\n  return styleFunctionSx;\r\n}\r\nconst styleFunctionSx = unstable_createStyleFunctionSx();\r\nstyleFunctionSx.filterProps = ['sx'];\r\nexport default styleFunctionSx;"],"mappings":"AAAA,OAAOA,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,KAAK,MAAM,mBAAmB;AACrC,SAASC,OAAO,EAAEC,aAAa,IAAIC,QAAQ,QAAQ,mBAAmB;AACtE,SAASC,iBAAiB,EAAEC,2BAA2B,EAAEC,uBAAuB,QAAQ,yBAAyB;AACjH,SAASC,oBAAoB,QAAQ,iCAAiC;AACtE,OAAOC,eAAe,MAAM,sBAAsB;AAClD,SAASC,mBAAmB,GAAa;EAAA,kCAATC,OAAO;IAAPA,OAAO;EAAA;EACrC,MAAMC,OAAO,GAAGD,OAAO,CAACE,MAAM,CAAC,CAACC,IAAI,EAAEC,MAAM,KAAKD,IAAI,CAACE,MAAM,CAACC,MAAM,CAACH,IAAI,CAACC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;EACtF,MAAMG,KAAK,GAAG,IAAIC,GAAG,CAACP,OAAO,CAAC;EAC9B,OAAOD,OAAO,CAACS,KAAK,CAACL,MAAM,IAAIG,KAAK,CAACG,IAAI,KAAKJ,MAAM,CAACH,IAAI,CAACC,MAAM,CAAC,CAACO,MAAM,CAAC;AAC3E;AACA,SAASC,QAAQ,CAACC,OAAO,EAAEC,GAAG,EAAE;EAC9B,OAAO,OAAOD,OAAO,KAAK,UAAU,GAAGA,OAAO,CAACC,GAAG,CAAC,GAAGD,OAAO;AAC/D;;AAEA;AACA,OAAO,SAASE,8BAA8B,GAAG;EAC/C,SAASC,aAAa,CAACC,IAAI,EAAEC,GAAG,EAAEC,KAAK,EAAEC,MAAM,EAAE;IAC/C,MAAMC,KAAK,GAAG;MACZ,CAACJ,IAAI,GAAGC,GAAG;MACXC;IACF,CAAC;IACD,MAAMG,OAAO,GAAGF,MAAM,CAACH,IAAI,CAAC;IAC5B,IAAI,CAACK,OAAO,EAAE;MACZ,OAAO;QACL,CAACL,IAAI,GAAGC;MACV,CAAC;IACH;IACA,MAAM;MACJK,WAAW,GAAGN,IAAI;MAClBO,QAAQ;MACRC,SAAS;MACTC;IACF,CAAC,GAAGJ,OAAO;IACX,IAAIJ,GAAG,IAAI,IAAI,EAAE;MACf,OAAO,IAAI;IACb;;IAEA;IACA,IAAIM,QAAQ,KAAK,YAAY,IAAIN,GAAG,KAAK,SAAS,EAAE;MAClD,OAAO;QACL,CAACD,IAAI,GAAGC;MACV,CAAC;IACH;IACA,MAAMS,YAAY,GAAGpC,OAAO,CAAC4B,KAAK,EAAEK,QAAQ,CAAC,IAAI,CAAC,CAAC;IACnD,IAAIE,KAAK,EAAE;MACT,OAAOA,KAAK,CAACL,KAAK,CAAC;IACrB;IACA,MAAMO,kBAAkB,GAAGC,cAAc,IAAI;MAC3C,IAAIC,KAAK,GAAGrC,QAAQ,CAACkC,YAAY,EAAEF,SAAS,EAAEI,cAAc,CAAC;MAC7D,IAAIA,cAAc,KAAKC,KAAK,IAAI,OAAOD,cAAc,KAAK,QAAQ,EAAE;QAClE;QACAC,KAAK,GAAGrC,QAAQ,CAACkC,YAAY,EAAEF,SAAS,EAAG,GAAER,IAAK,GAAEY,cAAc,KAAK,SAAS,GAAG,EAAE,GAAGxC,UAAU,CAACwC,cAAc,CAAE,EAAC,EAAEA,cAAc,CAAC;MACvI;MACA,IAAIN,WAAW,KAAK,KAAK,EAAE;QACzB,OAAOO,KAAK;MACd;MACA,OAAO;QACL,CAACP,WAAW,GAAGO;MACjB,CAAC;IACH,CAAC;IACD,OAAOpC,iBAAiB,CAAC2B,KAAK,EAAEH,GAAG,EAAEU,kBAAkB,CAAC;EAC1D;EACA,SAASG,eAAe,CAACV,KAAK,EAAE;IAC9B,MAAM;MACJW,EAAE;MACFb,KAAK,GAAG,CAAC;IACX,CAAC,GAAGE,KAAK,IAAI,CAAC,CAAC;IACf,IAAI,CAACW,EAAE,EAAE;MACP,OAAO,IAAI,CAAC,CAAC;IACf;;IACA,MAAMZ,MAAM,GAAGD,KAAK,CAACc,iBAAiB,IAAInC,eAAe;;IAEzD;AACJ;AACA;AACA;AACA;IACI,SAASoC,QAAQ,CAACC,OAAO,EAAE;MACzB,IAAIC,QAAQ,GAAGD,OAAO;MACtB,IAAI,OAAOA,OAAO,KAAK,UAAU,EAAE;QACjCC,QAAQ,GAAGD,OAAO,CAAChB,KAAK,CAAC;MAC3B,CAAC,MAAM,IAAI,OAAOgB,OAAO,KAAK,QAAQ,EAAE;QACtC;QACA,OAAOA,OAAO;MAChB;MACA,IAAI,CAACC,QAAQ,EAAE;QACb,OAAO,IAAI;MACb;MACA,MAAMC,gBAAgB,GAAG1C,2BAA2B,CAACwB,KAAK,CAACmB,WAAW,CAAC;MACvE,MAAMC,eAAe,GAAGjC,MAAM,CAACH,IAAI,CAACkC,gBAAgB,CAAC;MACrD,IAAIG,GAAG,GAAGH,gBAAgB;MAC1B/B,MAAM,CAACH,IAAI,CAACiC,QAAQ,CAAC,CAACK,OAAO,CAACC,QAAQ,IAAI;QACxC,MAAMZ,KAAK,GAAGlB,QAAQ,CAACwB,QAAQ,CAACM,QAAQ,CAAC,EAAEvB,KAAK,CAAC;QACjD,IAAIW,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKa,SAAS,EAAE;UACzC,IAAI,OAAOb,KAAK,KAAK,QAAQ,EAAE;YAC7B,IAAIV,MAAM,CAACsB,QAAQ,CAAC,EAAE;cACpBF,GAAG,GAAGlD,KAAK,CAACkD,GAAG,EAAExB,aAAa,CAAC0B,QAAQ,EAAEZ,KAAK,EAAEX,KAAK,EAAEC,MAAM,CAAC,CAAC;YACjE,CAAC,MAAM;cACL,MAAMwB,iBAAiB,GAAGlD,iBAAiB,CAAC;gBAC1CyB;cACF,CAAC,EAAEW,KAAK,EAAEe,CAAC,KAAK;gBACd,CAACH,QAAQ,GAAGG;cACd,CAAC,CAAC,CAAC;cACH,IAAI9C,mBAAmB,CAAC6C,iBAAiB,EAAEd,KAAK,CAAC,EAAE;gBACjDU,GAAG,CAACE,QAAQ,CAAC,GAAGX,eAAe,CAAC;kBAC9BC,EAAE,EAAEF,KAAK;kBACTX;gBACF,CAAC,CAAC;cACJ,CAAC,MAAM;gBACLqB,GAAG,GAAGlD,KAAK,CAACkD,GAAG,EAAEI,iBAAiB,CAAC;cACrC;YACF;UACF,CAAC,MAAM;YACLJ,GAAG,GAAGlD,KAAK,CAACkD,GAAG,EAAExB,aAAa,CAAC0B,QAAQ,EAAEZ,KAAK,EAAEX,KAAK,EAAEC,MAAM,CAAC,CAAC;UACjE;QACF;MACF,CAAC,CAAC;MACF,OAAOvB,oBAAoB,CAACsB,KAAK,EAAEvB,uBAAuB,CAAC2C,eAAe,EAAEC,GAAG,CAAC,CAAC;IACnF;IACA,OAAOM,KAAK,CAACC,OAAO,CAACf,EAAE,CAAC,GAAGA,EAAE,CAACgB,GAAG,CAACd,QAAQ,CAAC,GAAGA,QAAQ,CAACF,EAAE,CAAC;EAC5D;EACA,OAAOD,eAAe;AACxB;AACA,MAAMA,eAAe,GAAGhB,8BAA8B,EAAE;AACxDgB,eAAe,CAACkB,WAAW,GAAG,CAAC,IAAI,CAAC;AACpC,eAAelB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}